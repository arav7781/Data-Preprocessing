# -*- coding: utf-8 -*-
"""KNNImpuataton

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pLAI1kVRyZwAJ_tQJB6bowXwhJte1XPB
"""

#KNN imputation
import numpy as np
import pandas as pd

from sklearn.impute import KNNImputer#aas pass k neighbours ko dekhke missing value dalta hai

dict = {'maths':[85,91,np.nan,91],
        'chemistry':[72,75,74,np.nan],
        'physics':[np.nan,68,82,81],
        'Biology':[81,81,72,np.nan]}

df = pd.DataFrame(dict)

df

imputer = KNNImputer(n_neighbors=2)#imputer is an object
#KNNImputer acts as a class here
after_imputation = imputer.fit_transform(df)
after_imputation

df1 = pd.DataFrame(after_imputation,columns=['maths','chemistry','physics','Biology'])
df1

X = {'classA':[1,3,np.nan,4],
        'classB':[6,np.nan,8,np.nan],
        'classC':[5,4,2,3],
        'classD':[9,np.nan,6,8]}

df2 = pd.DataFrame(X)
df2

df2.isna().sum()

(df2.isna().sum() / df2.shape[0]) * 100

df3 = df2.dropna(axis = 0)
df3
#df.size missing value bhi ginta hai
#df.count missing value nhi ginta

df4 = df2.dropna(axis = 1)
df4

df5 = df2.fillna(df2.mean())
df5

imputer = KNNImputer(n_neighbors=2)
h1= imputer.fit_transform(df2)
h1

df6 = pd.DataFrame(h1,columns=['classA','classB','classC','classD'])
df6

Y = {
        'Department':['Navy','Army','np.nan','Navy','np.nan'],
        'color_code':['White','Green','White','np.nan','White']}

dz = pd.DataFrame(Y)
dz

imputer = KNNImputer(n_neighbors=2)
h2 = imputer.fit_transform(dz)
h2#KNN do no work on categorical data
#therefore error

dz
dz['Department_map'] = dz['Department'].map({'Navy':1,'Army':2})#encoding into int data type
dz['color_code_map'] = dz['color_code'].map({'White':1,'Green':2})
dz

imputer = KNNImputer(n_neighbors=1)
h3 = imputer.fit_transform(dz[['Department_map','color_code_map']])
h3

h3 = pd.DataFrame(h3,columns=['Department_map','color_code_map'])
h3

#convert back to navy and green
h3['Department'] = h3['Department_map'].map({1:'Navy',2:'Army'})
h3['color_code'] = h3['color_code_map'].map({1:'White',2:'Green'})
h3

from sklearn import CategoricalImputer